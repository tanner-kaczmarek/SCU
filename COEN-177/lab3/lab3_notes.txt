
#Name: Tanner Kaczmarek
#Date: 4/14/20
#Title: Lab3 - Notes
#Description: Lab 3 Notes

Part 1: No editing was needed. When the program is run, it sorts alphabetically and prints all the files in the same folder it is in. 


Part 2: No editing was needed.  When the program runs, it prints out the last command given in terminal with spaces in between each of the letters. 


Part 3: The program was a mix of the last two as it prints out the other files in the same folder as it with spaces in between. To get program as desired we just editing program two though. 
- To run the ls command correctly we had to use the dup2 which takes in two file descriptors and creates a copy. When its dup2(x,1) then it is stdout and dup2(x,0) is stdin. 


Part 4: This program did not prove to be too challenging at part 3 as many similar concepts were done.  
- the information cat /etc/passwd had to be sent using stdout from dup2(x,1) and then it was stdin to grep root by dup2(x,0).
- the use of the execlp command was useful to call cat /etc/passwd at the command line and same for grep root.
- the upstream end of the pipe was the stdout and the downstream was the stdin.

Part 5: The program sends the word producer into the pipe with a fixed size buffer and the consumer pulled the messages out. 
- Some difficulty occurred with using the buffer but I found that it was pretty similar the second example where a buffer was used there at least on the consumer side. 


Part 6:  In this program we created 10 different threads for each iteration in the loop.
- It had unique thread ID's but many with the same iteration.
- This is because we had the address of i, instead of going straight for the value of i. At a given time i's address can lead it to be the same iteration more than once. 

Part 7: Same problem as last time but instead we passed the exact value of i with (void *)(size_t)i.




